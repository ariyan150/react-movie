{"version":3,"sources":["components/ScrollReveal.js","components/Header.js","components/Movies.js","components/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["ScrollReveal","Header","user","useEffect","sr","reveal","origin","duration","delay","distance","scale","className","Row","setSelectedMovie","useState","movies","setmovies","query","setQuery","truncate","str","n","length","substr","class","value","onChange","e","preventDefault","target","fetch","then","res","json","data","Response","Search","console","log","type","placeholder","aria-label","id","map","movie","Title","Year","src","Poster","alt","onClick","imdbID","Modal","selectedMovie","setMovie","settrailer","response","items","classList","contains","Director","Actors","Genre","Rated","Runtime","BoxOffice","imdbRating","Metascore","Plot","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4ae2f8a.chunk.js","sourcesContent":["import ScrollReveal from 'scrollreveal'\r\nexport default ScrollReveal()","import \"./Header.css\"\r\nimport sr from './ScrollReveal'\r\nimport { useEffect } from 'react'\r\n\r\nfunction Header({user}) {\r\n\r\n  useEffect(()=>{\r\n    const config = {\r\n        origin: 'top',\r\n        duration: 1000,\r\n        delay: 150,\r\n        distance: '500px',\r\n        scale: 1,\r\n        \r\n      }\r\n    sr.reveal('.header', config)\r\n  },[])\r\n\r\n    return (\r\n      <div className=\"header\">\r\n        <h1>Movies | {user} | React App</h1>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Header;\r\n  "," import { useState, useEffect } from 'react'\r\n import \"./Movies.css\"\r\n import sr from './ScrollReveal'\r\n\r\n\r\nfunction Row({setSelectedMovie}) {\r\n  const [movies, setmovies] = useState([])\r\n  const [query, setQuery] = useState([\"\"])\r\n  \r\n\r\n  const onChange = e => {\r\n    e.preventDefault();\r\n\r\n    setQuery(e.target.value);\r\n\r\n    fetch(`http://www.omdbapi.com/?s=${e.target.value}&apikey=af3d009a`)\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      if(data.Response === 'True') {\r\n        setmovies(data.Search)\r\n        console.log(data.Search)\r\n      } else {\r\n        setmovies([])\r\n      };\r\n      \r\n    });\r\n  }\r\n  useEffect(()=>{\r\n    const config = {\r\n        \r\n        duration: 2000,\r\n        delay: 150,\r\n        distance: '500px',\r\n        scale: 1,\r\n        \r\n      }\r\n    sr.reveal('.container', config)\r\n  },[query])\r\n\r\n  function truncate(str, n) {\r\n    return str.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n  }\r\n  \r\n    return (\r\n      <div className=\"container\">\r\n        <div className='search bar mt-3'>\r\n          <input class=\"form-control\"\r\n          value={query}\r\n          onChange={onChange} type=\"text\"\r\n          placeholder=\"Search for movies\"\r\n          aria-label=\"default input example\">\r\n          </input>\r\n        </div>\r\n\r\n        <div className=\"movies\" id='row_movies'>\r\n          {movies.map(movie => (\r\n            <div className='movie'>\r\n              <div className='title' >\r\n                {truncate(movie.Title, 10)} ({truncate(movie.Year, 5)})\r\n              </div>\r\n              <div className='poster'>\r\n                <img src={movie.Poster} alt={movie.Title} />\r\n              </div>\r\n              \r\n              <div className='buttons'>\r\n                <button type=\"button\" class=\"btn btn-success\" onClick={() => setSelectedMovie(movie.imdbID)}>Info</button>\r\n                <button type=\"button\" class=\"btn btn-danger\">Trailers</button>\r\n                <button type=\"button\" class=\"btn btn-primary\">Parents Guid</button>\r\n                <button type=\"button\" class=\"btn btn-warning\">Movies like this</button>\r\n              </div>\r\n              \r\n            </div>\r\n          ))}\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Row;","import './Modal.css';\r\nimport sr from './ScrollReveal'\r\nimport { useState, useEffect } from 'react'\r\n\r\n\r\nfunction Modal({ selectedMovie, setSelectedMovie }) {\r\n    const [movie, setMovie] = useState(() => '');\r\n    const [trailer, settrailer] = useState(null);\r\n    \r\n    useEffect(()=>{\r\n        const config = {\r\n            origin: 'top',\r\n            duration: 2000,\r\n            delay: 150,\r\n            distance: '500px',\r\n          };\r\n        sr.reveal('.movie_page', config)\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        fetch(`http://www.omdbapi.com/?i=${selectedMovie}&apikey=af3d009a`)\r\n        .then((res) => res.json())\r\n        .then(data => setMovie(data))\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        fetch(`https://youtube-search-results.p.rapidapi.com/youtube-search/?q=${movie.Title}${movie.Year} trailer`, {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-key\": \"ea4ba8f6aamsh23ffbbac2f6a618p1bd384jsna311b8e29f36\",\r\n            \"x-rapidapi-host\": \"youtube-search-results.p.rapidapi.com\"\r\n        }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            data.items && settrailer(\"https://www.youtube.com/embed/\" + data.items[1].id)\r\n        })\r\n        \r\n        },[movie])\r\n    \r\n    const closeModal = (e) => {\r\n        if (e.target.classList.contains('backdrop')){\r\n            setSelectedMovie(null);\r\n        }\r\n    }\r\n    function truncate(str, n) {\r\n        return str.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n        }\r\n    \r\n\r\n    return (\r\n        <div className=\"backdrop\" onClick={closeModal}>\r\n                <button type=\"button\" className=\"btn btn-danger rounded-circle\" id='close_modal' onClick={() => setSelectedMovie(null)}>X</button>\r\n                <div className='movie_page'>\r\n                    <div className='name'>\r\n                        {movie.Title} ({movie.Year})\r\n                    </div>\r\n                    <div className='poster'>\r\n                        <img src={movie.Poster} />\r\n                    </div>\r\n                    <div className='detail'>\r\n                        <div className='director'>\r\n                            <div className='title_box'>Director</div>\r\n                            <div className='body_box'>\r\n                                {movie.Director ? movie.Director:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='actors'>\r\n                            <div className='title_box'>Actors</div>\r\n                            <div className='body_box'>\r\n                                {movie.Actors ? movie.Actors:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='genre'>\r\n                            <div className='title_box'>Genre</div>\r\n                            <div className='body_box'>\r\n                                {movie.Genre ? movie.Genre:'Unkown'}\r\n                            </div>\r\n                           \r\n                        </div>\r\n                        <div className='rated'>\r\n                            <div className='title_box'>Rated</div>\r\n                            <div className='body_box'>\r\n                                {movie.Rated ? movie.Rated:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='time'>\r\n                            <div className='title_box'>Time</div>\r\n                            <div className='body_box'>\r\n                                {movie.Runtime ? movie.Runtime:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='boxOffice'>\r\n                            <div className='title_box'>boxOffice</div>\r\n                            <div className='body_box'>\r\n                                {movie.BoxOffice ? movie.BoxOffice:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='rates'>\r\n                            <div className='title_box'>Rates</div>\r\n                            <div className='body_box' id='rate_body_box'>\r\n                                <section className='body_box_sub'>{movie.imdbRating}</section>     \r\n                                <section className='body_box_sub'>{movie.Metascore}</section>\r\n                            </div>\r\n                        </div>\r\n                        <div className='plot'>\r\n                            <div className='title_box'>Plot</div>\r\n                            <div className='body_box'>\r\n                                {truncate(\r\n                                    movie.Plot || 'none'\r\n                                    , 160)}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default Modal;","import { useState } from 'react'\nimport './App.css';\nimport Header from './components/Header';\nimport Movies from './components/Movies';\nimport Modal from './components/Modal';\n\nfunction App() {\n  const [selectedMovie, setSelectedMovie] = useState(null)\n\n  return (\n    <div className=\"App\">\n      <Header user='Ariyan' />\n      <Movies setSelectedMovie={setSelectedMovie} className='Movies'/>\n      {selectedMovie && <Modal selectedMovie={selectedMovie} setSelectedMovie={setSelectedMovie} />}\n    </div>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}