[{"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\index.js":"1","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\reportWebVitals.js":"2","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\App.js":"3","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Header.js":"4","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Modal.js":"5","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\ScrollReveal.js":"6","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Movies.js":"7"},{"size":478,"mtime":1609144940000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":535,"mtime":1610039688000,"results":"11","hashOfConfig":"9"},{"size":495,"mtime":1609941260000,"results":"12","hashOfConfig":"9"},{"size":5140,"mtime":1610037438000,"results":"13","hashOfConfig":"9"},{"size":70,"mtime":1609621550000,"results":"14","hashOfConfig":"9"},{"size":2243,"mtime":1610041466000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1og8791",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\index.js",[],["32","33"],"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\reportWebVitals.js",[],"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\App.js",[],"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Header.js",[],"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Modal.js",["34","35","36"],"import './Modal.css';\r\nimport sr from './ScrollReveal'\r\nimport { useState, useEffect } from 'react'\r\n\r\n\r\nfunction Modal({ selectedMovie, setSelectedMovie }) {\r\n    const [movie, setMovie] = useState(() => '');\r\n    const [trailer, settrailer] = useState(null);\r\n    \r\n    useEffect(()=>{\r\n        const config = {\r\n            origin: 'top',\r\n            duration: 2000,\r\n            delay: 150,\r\n            distance: '500px',\r\n          };\r\n        sr.reveal('.movie_page', config)\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        fetch(`http://www.omdbapi.com/?i=${selectedMovie}&apikey=af3d009a`)\r\n        .then((res) => res.json())\r\n        .then(data => setMovie(data))\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        fetch(`https://youtube-search-results.p.rapidapi.com/youtube-search/?q=${movie.Title}${movie.Year} trailer`, {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-key\": \"ea4ba8f6aamsh23ffbbac2f6a618p1bd384jsna311b8e29f36\",\r\n            \"x-rapidapi-host\": \"youtube-search-results.p.rapidapi.com\"\r\n        }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            data.items && settrailer(\"https://www.youtube.com/embed/\" + data.items[1].id)\r\n        })\r\n        \r\n        },[movie])\r\n    \r\n    const closeModal = (e) => {\r\n        if (e.target.classList.contains('backdrop')){\r\n            setSelectedMovie(null);\r\n        }\r\n    }\r\n    function truncate(str, n) {\r\n        return str.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n        }\r\n    \r\n\r\n    return (\r\n        <div className=\"backdrop\" onClick={closeModal}>\r\n                <button type=\"button\" className=\"btn btn-danger rounded-circle\" id='close_modal' onClick={() => setSelectedMovie(null)}>X</button>\r\n                <div className='movie_page'>\r\n                    <div className='name'>\r\n                        {movie.Title} ({movie.Year})\r\n                    </div>\r\n                    <div className='poster'>\r\n                        <img src={movie.Poster} />\r\n                    </div>\r\n                    <div className='detail'>\r\n                        <div className='director'>\r\n                            <div className='title_box'>Director</div>\r\n                            <div className='body_box'>\r\n                                {movie.Director ? movie.Director:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='actors'>\r\n                            <div className='title_box'>Actors</div>\r\n                            <div className='body_box'>\r\n                                {movie.Actors ? movie.Actors:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='genre'>\r\n                            <div className='title_box'>Genre</div>\r\n                            <div className='body_box'>\r\n                                {movie.Genre ? movie.Genre:'Unkown'}\r\n                            </div>\r\n                           \r\n                        </div>\r\n                        <div className='rated'>\r\n                            <div className='title_box'>Rated</div>\r\n                            <div className='body_box'>\r\n                                {movie.Rated ? movie.Rated:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='time'>\r\n                            <div className='title_box'>Time</div>\r\n                            <div className='body_box'>\r\n                                {movie.Runtime ? movie.Runtime:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='boxOffice'>\r\n                            <div className='title_box'>boxOffice</div>\r\n                            <div className='body_box'>\r\n                                {movie.BoxOffice ? movie.BoxOffice:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='rates'>\r\n                            <div className='title_box'>Rates</div>\r\n                            <div className='body_box' id='rate_body_box'>\r\n                                <section className='body_box_sub'>{movie.imdbRating}</section>     \r\n                                <section className='body_box_sub'>{movie.Metascore}</section>\r\n                            </div>\r\n                        </div>\r\n                        <div className='plot'>\r\n                            <div className='title_box'>Plot</div>\r\n                            <div className='body_box'>\r\n                                {truncate(\r\n                                    movie.Plot || 'none'\r\n                                    , 160)}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default Modal;","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\ScrollReveal.js",[],"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Movies.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":8,"column":12,"nodeType":"43","messageId":"44","endLine":8,"endColumn":19},{"ruleId":"45","severity":1,"message":"46","line":24,"column":7,"nodeType":"47","endLine":24,"endColumn":9,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":59,"column":25,"nodeType":"51","endLine":59,"endColumn":51},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'trailer' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedMovie'. Either include it or remove the dependency array.","ArrayExpression",["54"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},"Update the dependencies array to be: [selectedMovie]",{"range":"57","text":"58"},[677,679],"[selectedMovie]"]