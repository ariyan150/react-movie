[{"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\index.js":"1","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\reportWebVitals.js":"2","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\App.js":"3","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Header.js":"4","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Modal.js":"5","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\ScrollReveal.js":"6","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Movies.js":"7","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\BoxOffice.js":"8"},{"size":478,"mtime":1609144940000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":889,"mtime":1610116154000,"results":"12","hashOfConfig":"10"},{"size":811,"mtime":1610114856000,"results":"13","hashOfConfig":"10"},{"size":5140,"mtime":1610037438000,"results":"14","hashOfConfig":"10"},{"size":70,"mtime":1609621550000,"results":"15","hashOfConfig":"10"},{"size":2558,"mtime":1610115692000,"results":"16","hashOfConfig":"10"},{"size":1149,"mtime":1610113962000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1og8791",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\index.js",[],["37","38"],"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\reportWebVitals.js",[],"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\App.js",["39","40"],"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Header.js",[],"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Modal.js",["41","42","43"],"import './Modal.css';\r\nimport sr from './ScrollReveal'\r\nimport { useState, useEffect } from 'react'\r\n\r\n\r\nfunction Modal({ selectedMovie, setSelectedMovie }) {\r\n    const [movie, setMovie] = useState(() => '');\r\n    const [trailer, settrailer] = useState(null);\r\n    \r\n    useEffect(()=>{\r\n        const config = {\r\n            origin: 'top',\r\n            duration: 2000,\r\n            delay: 150,\r\n            distance: '500px',\r\n          };\r\n        sr.reveal('.movie_page', config)\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        fetch(`http://www.omdbapi.com/?i=${selectedMovie}&apikey=af3d009a`)\r\n        .then((res) => res.json())\r\n        .then(data => setMovie(data))\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        fetch(`https://youtube-search-results.p.rapidapi.com/youtube-search/?q=${movie.Title}${movie.Year} trailer`, {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-key\": \"ea4ba8f6aamsh23ffbbac2f6a618p1bd384jsna311b8e29f36\",\r\n            \"x-rapidapi-host\": \"youtube-search-results.p.rapidapi.com\"\r\n        }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            data.items && settrailer(\"https://www.youtube.com/embed/\" + data.items[1].id)\r\n        })\r\n        \r\n        },[movie])\r\n    \r\n    const closeModal = (e) => {\r\n        if (e.target.classList.contains('backdrop')){\r\n            setSelectedMovie(null);\r\n        }\r\n    }\r\n    function truncate(str, n) {\r\n        return str.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n        }\r\n    \r\n\r\n    return (\r\n        <div className=\"backdrop\" onClick={closeModal}>\r\n                <button type=\"button\" className=\"btn btn-danger rounded-circle\" id='close_modal' onClick={() => setSelectedMovie(null)}>X</button>\r\n                <div className='movie_page'>\r\n                    <div className='name'>\r\n                        {movie.Title} ({movie.Year})\r\n                    </div>\r\n                    <div className='poster'>\r\n                        <img src={movie.Poster} />\r\n                    </div>\r\n                    <div className='detail'>\r\n                        <div className='director'>\r\n                            <div className='title_box'>Director</div>\r\n                            <div className='body_box'>\r\n                                {movie.Director ? movie.Director:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='actors'>\r\n                            <div className='title_box'>Actors</div>\r\n                            <div className='body_box'>\r\n                                {movie.Actors ? movie.Actors:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='genre'>\r\n                            <div className='title_box'>Genre</div>\r\n                            <div className='body_box'>\r\n                                {movie.Genre ? movie.Genre:'Unkown'}\r\n                            </div>\r\n                           \r\n                        </div>\r\n                        <div className='rated'>\r\n                            <div className='title_box'>Rated</div>\r\n                            <div className='body_box'>\r\n                                {movie.Rated ? movie.Rated:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='time'>\r\n                            <div className='title_box'>Time</div>\r\n                            <div className='body_box'>\r\n                                {movie.Runtime ? movie.Runtime:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='boxOffice'>\r\n                            <div className='title_box'>boxOffice</div>\r\n                            <div className='body_box'>\r\n                                {movie.BoxOffice ? movie.BoxOffice:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='rates'>\r\n                            <div className='title_box'>Rates</div>\r\n                            <div className='body_box' id='rate_body_box'>\r\n                                <section className='body_box_sub'>{movie.imdbRating}</section>     \r\n                                <section className='body_box_sub'>{movie.Metascore}</section>\r\n                            </div>\r\n                        </div>\r\n                        <div className='plot'>\r\n                            <div className='title_box'>Plot</div>\r\n                            <div className='body_box'>\r\n                                {truncate(\r\n                                    movie.Plot || 'none'\r\n                                    , 160)}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default Modal;","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\ScrollReveal.js",[],"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Movies.js",[],"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\BoxOffice.js",["44","45","46"],"import './BoxOffice.css';\r\nimport { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\nfunction BoxOffice() {\r\n    const data = require('../BoxOffice.json').items;\r\n    const date = require('../BoxOffice.json').date;\r\n    console.log(date)\r\n\r\n    return (\r\n      <div className=\"BoxOffice\">\r\n        <div className=\"BoxOffice__date\">\r\n            {date}\r\n        </div>\r\n                {data.map(movie => \r\n                    <div className=\"movie_row\">\r\n                        <img src={movie.poster} />\r\n                        <div className='info'>\r\n                            <div className='info__title'>\r\n                                {movie.title}\r\n                            </div>\r\n                            <div className='numbers'>\r\n                                <p>{movie.last}</p>\r\n                                <p>{movie.total}</p>\r\n                                <p>{movie.weeks_count}</p>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                )}\r\n\r\n        \r\n      </div>\r\n    );\r\n  } \r\n  \r\n  export default BoxOffice;",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":34,"nodeType":"53","messageId":"54","endLine":1,"endColumn":40},{"ruleId":"51","severity":1,"message":"55","line":7,"column":8,"nodeType":"53","messageId":"54","endLine":7,"endColumn":17},{"ruleId":"51","severity":1,"message":"56","line":8,"column":12,"nodeType":"53","messageId":"54","endLine":8,"endColumn":19},{"ruleId":"57","severity":1,"message":"58","line":24,"column":7,"nodeType":"59","endLine":24,"endColumn":9,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":59,"column":25,"nodeType":"63","endLine":59,"endColumn":51},{"ruleId":"51","severity":1,"message":"64","line":2,"column":10,"nodeType":"53","messageId":"54","endLine":2,"endColumn":18},{"ruleId":"51","severity":1,"message":"65","line":2,"column":20,"nodeType":"53","messageId":"54","endLine":2,"endColumn":29},{"ruleId":"61","severity":1,"message":"62","line":19,"column":25,"nodeType":"63","endLine":19,"endColumn":51},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'BoxOffice' is defined but never used.","'trailer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedMovie'. Either include it or remove the dependency array.","ArrayExpression",["68"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [selectedMovie]",{"range":"71","text":"72"},[677,679],"[selectedMovie]"]