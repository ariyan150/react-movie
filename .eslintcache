[{"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\index.js":"1","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\reportWebVitals.js":"2","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\App.js":"3","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Header.js":"4","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Modal.js":"5","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\ScrollReveal.js":"6","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Movies.js":"7","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\BoxOffice.js":"8","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Footer.js":"9"},{"size":478,"mtime":1609144940000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":904,"mtime":1610132274000,"results":"13","hashOfConfig":"11"},{"size":854,"mtime":1610117946000,"results":"14","hashOfConfig":"11"},{"size":5345,"mtime":1610121860000,"results":"15","hashOfConfig":"11"},{"size":70,"mtime":1609621550000,"results":"16","hashOfConfig":"11"},{"size":3077,"mtime":1610134164000,"results":"17","hashOfConfig":"11"},{"size":1251,"mtime":1610120514000,"results":"18","hashOfConfig":"11"},{"size":237,"mtime":1610119148000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1og8791",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\index.js",[],["44","45"],"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\reportWebVitals.js",[],"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\App.js",["46"],"import {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport { useState } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Movies from './components/Movies';\nimport Modal from './components/Modal';\n\nfunction App() {\n  const [selectedMovie, setSelectedMovie] = useState(null)\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header user='Ariyan' />\n          <Route path='/' exact>\n            Home Page\n          </Route>\n          <Route path='/movies'>\n            <Movies setSelectedMovie={setSelectedMovie} className='Movies'/>\n            {selectedMovie && <Modal selectedMovie={selectedMovie} setSelectedMovie={setSelectedMovie} />}\n          </Route>\n          <Route path='/x'>\n            x\n          </Route>\n          <Footer />\n      </div>\n    </Router>\n  );\n} \n\nexport default App;\n","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Header.js",[],"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Modal.js",["47","48","49"],"import './Modal.css';\r\nimport sr from './ScrollReveal'\r\nimport { useState, useEffect } from 'react'\r\n\r\n\r\nfunction Modal({ selectedMovie, setSelectedMovie }) {\r\n    const [movie, setMovie] = useState(() => '');\r\n    const [trailer, settrailer] = useState(null);\r\n    \r\n    useEffect(()=>{\r\n        const config = {\r\n            origin: 'top',\r\n            duration: 2000,\r\n            delay: 150,\r\n            distance: '500px',\r\n          };\r\n        sr.reveal('.movie_page', config)\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        fetch(`http://www.omdbapi.com/?i=${selectedMovie}&apikey=af3d009a`)\r\n        .then((res) => res.json())\r\n        .then(data => setMovie(data))\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        fetch(`https://youtube-search-results.p.rapidapi.com/youtube-search/?q=${movie.Title}${movie.Year} trailer`, {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-key\": \"ea4ba8f6aamsh23ffbbac2f6a618p1bd384jsna311b8e29f36\",\r\n            \"x-rapidapi-host\": \"youtube-search-results.p.rapidapi.com\"\r\n        }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            data.items && settrailer(\"https://www.youtube.com/embed/\" + data.items[1].id)\r\n        })\r\n        \r\n        },[movie])\r\n    \r\n    const closeModal = (e) => {\r\n        if (e.target.classList.contains('backdrop')){\r\n            setSelectedMovie(null);\r\n        }\r\n    }\r\n    function truncate(str, n) {\r\n        return str.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n        }\r\n    \r\n\r\n    return (\r\n        <div className=\"backdrop\" onClick={closeModal}>\r\n                <button type=\"button\" className=\"btn btn-danger rounded-circle\" id='close_modal' onClick={() => setSelectedMovie(null)}>X</button>\r\n                <div className='movie_page'>\r\n                    <div className='name'>\r\n                        {movie.Title} ({movie.Year})\r\n                    </div>\r\n                    <div className='poster'>\r\n                        <img src={movie.Poster!='N/A' ? movie.Poster : 'https://images.unsplash.com/photo-1486693326701-1ea88c6e2af3?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=634&q=80' } alt={movie.Title} />\r\n                    </div>\r\n                    <div className='detail'>\r\n                        <div className='director'>\r\n                            <div className='title_box'>Director</div>\r\n                            <div className='body_box'>\r\n                                {movie.Director ? movie.Director:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='actors'>\r\n                            <div className='title_box'>Actors</div>\r\n                            <div className='body_box'>\r\n                                {movie.Actors ? movie.Actors:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='genre'>\r\n                            <div className='title_box'>Genre</div>\r\n                            <div className='body_box'>\r\n                                {movie.Genre ? movie.Genre:'Unkown'}\r\n                            </div>\r\n                           \r\n                        </div>\r\n                        <div className='rated'>\r\n                            <div className='title_box'>Rated</div>\r\n                            <div className='body_box'>\r\n                                {movie.Rated ? movie.Rated:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='time'>\r\n                            <div className='title_box'>Time</div>\r\n                            <div className='body_box'>\r\n                                {movie.Runtime ? movie.Runtime:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='boxOffice'>\r\n                            <div className='title_box'>boxOffice</div>\r\n                            <div className='body_box'>\r\n                                {movie.BoxOffice ? movie.BoxOffice:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='rates'>\r\n                            <div className='title_box'>Rates</div>\r\n                            <div className='body_box' id='rate_body_box'>\r\n                                <section className='body_box_sub'>{movie.imdbRating}</section>     \r\n                                <section className='body_box_sub'>{movie.Metascore}</section>\r\n                            </div>\r\n                        </div>\r\n                        <div className='plot'>\r\n                            <div className='title_box'>Plot</div>\r\n                            <div className='body_box'>\r\n                                {truncate(\r\n                                    movie.Plot || 'none'\r\n                                    , 160)}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default Modal;","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\ScrollReveal.js",[],"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Movies.js",["50"]," import { useState, useEffect } from 'react'\r\n import \"./Movies.css\"\r\n import sr from './ScrollReveal'\r\n import BoxOffice from \"./BoxOffice\"\r\n\r\n\r\nfunction Row({setSelectedMovie}) {\r\n  const [movies, setmovies] = useState([])\r\n  const [query, setQuery] = useState([\"\"])\r\n  \r\n\r\n  const onChange = e => {\r\n    e.preventDefault();\r\n\r\n    setQuery(e.target.value);\r\n\r\n    fetch(`http://www.omdbapi.com/?s=${e.target.value}&apikey=af3d009a`)\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      if(data.Response === 'True') {\r\n        setmovies(data.Search)\r\n        console.log(data.Search)\r\n      } else {\r\n        setmovies([])\r\n      };\r\n      \r\n    });\r\n  }\r\n  useEffect(()=>{\r\n    const midle = {\r\n        duration: 2000,\r\n        delay: 150,\r\n        distance: '500px',\r\n        scale: 1\r\n      }\r\n      const left = {\r\n        origin: 'left',\r\n        duration: 2000,\r\n        delay: 150,\r\n        distance: '500px',\r\n        scale: 1\r\n      }\r\n      \r\n    sr.reveal('.midle_page', midle);\r\n    sr.reveal('.left_page', left);\r\n  },[query])\r\n\r\n  function truncate(str, n) {\r\n    return str.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n  }\r\n  \r\n    return (\r\n      <div className=\"page\">\r\n\r\n        <div className='left_page'>\r\n          <div className='boxoffice_title'>\r\n            BoxOffice\r\n          </div>\r\n          <BoxOffice />\r\n        </div>\r\n\r\n        <div className='midle_page'>\r\n\r\n          <div className='search bar mt-3'>\r\n            <input class=\"form-control\"\r\n            value={query}\r\n            onChange={onChange} type=\"text\"\r\n            placeholder=\"Search for movies\"\r\n            aria-label=\"default input example\">\r\n            </input>\r\n          </div>\r\n\r\n          <div className=\"movies\" id='row_movies'>\r\n            {movies.map(movie => (\r\n              <div className='movie'>\r\n                <div className='title' >\r\n                  {truncate(movie.Title, 10)} ({truncate(movie.Year, 5)})\r\n                </div>\r\n                <div className='poster_buttons'>\r\n                  <div className='poster'>\r\n                    <img src={movie.Poster!='N/A' ? movie.Poster : 'https://images.unsplash.com/photo-1486693326701-1ea88c6e2af3?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=634&q=80' } alt={movie.Title} />\r\n                  </div>\r\n                  <div className='buttons'>\r\n                    <button type=\"button\" class=\"btn btn-success\" onClick={() => setSelectedMovie(movie.imdbID)}>Info</button>\r\n                    <button type=\"button\" class=\"btn btn-light\">Watchlist</button>\r\n                    <button type=\"button\" class=\"btn btn-danger\">Trailers</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\">Parents</button>\r\n                    <button type=\"button\" class=\"btn btn-warning\">like this</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className='right_page'>Ads</div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Row;","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\BoxOffice.js",["51","52","53"],"import './BoxOffice.css';\r\nimport { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\nfunction BoxOffice() {\r\n    const data = require('../BoxOffice.json').items;\r\n    const date = require('../BoxOffice.json').date;\r\n    console.log(date)\r\n\r\n    return (\r\n      <div className=\"BoxOffice\">\r\n        <div className=\"BoxOffice__date\">\r\n            {date}\r\n        </div>\r\n                {data.map((movie, index) => \r\n                    <div className=\"movie_row\">\r\n                        <div className=\"number\">#{index+1} </div>\r\n                        <img src={movie.poster} />\r\n                        \r\n                        <div className='info'>\r\n                            <div className='info__title'>\r\n                                {movie.title}\r\n                            </div>\r\n                            <div className='numbers'>\r\n                                <p>{movie.last}</p>\r\n                                <p>{movie.total}</p>\r\n                                <p>{movie.weeks_count}</p>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                )}\r\n\r\n        \r\n      </div>\r\n    );\r\n  } \r\n  \r\n  export default BoxOffice;","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Footer.js",["54","55"],"import './Footer.css';\r\nimport { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\nfunction Footer() {\r\n\r\n\r\n    return (\r\n      <div className=\"footer\">\r\n        Created By Ariyan Abidi\r\n      </div>\r\n    );\r\n  } \r\n  \r\n  export default Footer;",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":34,"nodeType":"62","messageId":"63","endLine":1,"endColumn":40},{"ruleId":"60","severity":1,"message":"64","line":8,"column":12,"nodeType":"62","messageId":"63","endLine":8,"endColumn":19},{"ruleId":"65","severity":1,"message":"66","line":24,"column":7,"nodeType":"67","endLine":24,"endColumn":9,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":59,"column":47,"nodeType":"71","messageId":"72","endLine":59,"endColumn":49},{"ruleId":"69","severity":1,"message":"70","line":81,"column":43,"nodeType":"71","messageId":"72","endLine":81,"endColumn":45},{"ruleId":"60","severity":1,"message":"73","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":18},{"ruleId":"60","severity":1,"message":"74","line":2,"column":20,"nodeType":"62","messageId":"63","endLine":2,"endColumn":29},{"ruleId":"75","severity":1,"message":"76","line":20,"column":25,"nodeType":"77","endLine":20,"endColumn":51},{"ruleId":"60","severity":1,"message":"73","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":18},{"ruleId":"60","severity":1,"message":"74","line":2,"column":20,"nodeType":"62","messageId":"63","endLine":2,"endColumn":29},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'trailer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedMovie'. Either include it or remove the dependency array.","ArrayExpression",["80"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [selectedMovie]",{"range":"83","text":"84"},[677,679],"[selectedMovie]"]