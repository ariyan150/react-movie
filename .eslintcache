[{"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\index.js":"1","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\reportWebVitals.js":"2","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\App.js":"3","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Header.js":"4","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Row.js":"5","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Modal.js":"6"},{"size":478,"mtime":1609144940000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":508,"mtime":1609316290000,"results":"10","hashOfConfig":"8"},{"size":203,"mtime":1609245028000,"results":"11","hashOfConfig":"8"},{"size":1339,"mtime":1609318740000,"results":"12","hashOfConfig":"8"},{"size":3802,"mtime":1609379848000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1og8791",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\index.js",[],["29","30"],"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\reportWebVitals.js",[],"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\App.js",[],"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Header.js",[],"I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Row.js",["31"]," import { useState, useEffect } from 'react'\r\n import \"./Row.css\"\r\n\r\n\r\nfunction Row({setSelectedMovie}) {\r\n  const [movies, setmovies] = useState([])\r\n  const [query, setQuery] = useState([\"\"])\r\n  \r\n\r\n  const onChange = e => {\r\n    e.preventDefault();\r\n\r\n    setQuery(e.target.value);\r\n\r\n    fetch(`http://www.omdbapi.com/?s=${e.target.value}&apikey=af3d009a`)\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      if(data.Response === 'True') {\r\n        setmovies(data.Search)\r\n        console.log(data.Search)\r\n      } else {\r\n        setmovies([])\r\n      };\r\n      \r\n    });\r\n  }\r\n  \r\n  \r\n  \r\n    return (\r\n      <div className=\"containers\">\r\n        <div className='Search bar mt-3'>\r\n          <input class=\"form-control\"\r\n          value={query}\r\n          onChange={onChange} type=\"text\"\r\n          placeholder=\"Search for movies\"\r\n          aria-label=\"default input example\">\r\n          </input>\r\n        </div>\r\n\r\n        <div className=\"movies\" id='row_movies'>\r\n          {movies.map(movie => (\r\n            <div className='movie'>\r\n              <div className='poster' onClick={() => setSelectedMovie(movie.imdbID)}>\r\n                <img src={movie.Poster} alt={movie.Title} />\r\n              </div>\r\n            </div>\r\n          ))}\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Row;","I:\\Cyber Punk\\Web Development\\test-todo-react\\src\\components\\Modal.js",["32","33"],"import './Modal.css';\r\nimport { useState, useEffect } from 'react'\r\n\r\n\r\nfunction Modal({ selectedMovie, setSelectedMovie }) {\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    fetch(`http://www.omdbapi.com/?i=${selectedMovie}&apikey=af3d009a`)\r\n    .then((res) => res.json())\r\n    .then(data => setMovie(data))\r\n    //.then(console.log(movie))\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"backdrop\" onClick={() => setSelectedMovie(null)}>\r\n            \r\n                <div className='movie_page'>\r\n                    <div className='name'>\r\n                        {movie.Title} ({movie.Year})\r\n                    </div>\r\n                    <div className='poster'>\r\n                        <img src={movie.Poster} />\r\n                    </div>\r\n                    <div className='detail'>\r\n                        <div className='director'>\r\n                            <div className='title_box'>Director</div>\r\n                            <div className='body_box'>\r\n                                {movie.Director ? movie.Director:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='actors'>\r\n                            <div className='title_box'>Actors</div>\r\n                            <div className='body_box'>\r\n                                {movie.Actors ? movie.Actors:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='genre'>\r\n                            <div className='title_box'>Genre</div>\r\n                            <div className='body_box'>\r\n                                {movie.Genre ? movie.Genre:'Unkown'}\r\n                            </div>\r\n                           \r\n                        </div>\r\n                        <div className='rated'>\r\n                            <div className='title_box'>Rated</div>\r\n                            <div className='body_box'>\r\n                                {movie.Rated ? movie.Rated:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='time'>\r\n                            <div className='title_box'>Time</div>\r\n                            <div className='body_box'>\r\n                                {movie.Runtime ? movie.Runtime:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='boxOffice'>\r\n                            <div className='title_box'>boxOffice</div>\r\n                            <div className='body_box'>\r\n                                {movie.BoxOffice ? movie.BoxOffice:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='rates'>\r\n                            <div className='title_box'>Rates</div>\r\n                            <div className='body_box'>\r\n                                <div className='body_box_sub'>{movie.imdbRating}</div>     \r\n                                <div className='body_box_sub'>{movie.Metascore}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='plot'>\r\n                            <div className='title_box'>Plot</div>\r\n                            <div className='body_box'>\r\n                                {movie.Plot ? movie.Plot:'Unkown'}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n            \r\n        </div>\r\n    );\r\n} \r\n\r\nexport default Modal;",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":21,"nodeType":"40","messageId":"41","endLine":1,"endColumn":30},{"ruleId":"38","severity":1,"message":"39","line":2,"column":20,"nodeType":"40","messageId":"41","endLine":2,"endColumn":29},{"ruleId":"42","severity":1,"message":"43","line":23,"column":25,"nodeType":"44","endLine":23,"endColumn":51},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]